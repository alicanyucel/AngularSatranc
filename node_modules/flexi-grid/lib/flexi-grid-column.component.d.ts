import { SimpleChanges, TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
export declare class FlexiGridColumnComponent {
    field: string;
    title: string;
    sortable: boolean;
    filterable: boolean;
    visible: boolean;
    filterType: FilterType;
    columnTemplate: TemplateRef<any> | any;
    format: DateFormatType | CurrencyFormatType | null;
    fraction: number;
    symbol: string;
    showSymbolInFront: boolean;
    width: string;
    resizable: boolean;
    draggable: boolean;
    className: string;
    textAlign: TextAlignType;
    hideOverflow: boolean;
    value: string;
    filterOperator: string;
    ngOnChanges(changes: SimpleChanges): void;
    setDefaultFilterOperator(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<FlexiGridColumnComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<FlexiGridColumnComponent, "flexi-grid-column", never, { "field": { "alias": "field"; "required": false; }; "title": { "alias": "title"; "required": false; }; "sortable": { "alias": "sortable"; "required": false; }; "filterable": { "alias": "filterable"; "required": false; }; "visible": { "alias": "visible"; "required": false; }; "filterType": { "alias": "filterType"; "required": false; }; "columnTemplate": { "alias": "columnTemplate"; "required": false; }; "format": { "alias": "format"; "required": false; }; "fraction": { "alias": "fraction"; "required": false; }; "symbol": { "alias": "symbol"; "required": false; }; "showSymbolInFront": { "alias": "showSymbolInFront"; "required": false; }; "width": { "alias": "width"; "required": false; }; "resizable": { "alias": "resizable"; "required": false; }; "draggable": { "alias": "draggable"; "required": false; }; "className": { "alias": "className"; "required": false; }; "textAlign": { "alias": "textAlign"; "required": false; }; "hideOverflow": { "alias": "hideOverflow"; "required": false; }; }, {}, never, never, false, never>;
}
export type TextAlignType = "left" | "center" | "right";
export type FilterType = "text" | "date" | "date-time" | "number";
export type DateFormatType = "d" | "dd" | "ddd" | "dddd" | // Gün
"M" | "MM" | "MMM" | "MMMM" | // Ay
"yy" | "yyyy" | // Yıl
"h" | "hh" | "H" | "HH" | // Saat
"m" | "mm" | // Dakika
"s" | "ss" | // Saniye
"dd.MM.yyyy" | "MM/dd/yyyy" | "yyyy-MM-dd" | "dd MMMM yyyy" | "MMMM dd, yyyy" | "d/M/yyyy" | "d/M/yy" | "dd/MM/yyyy" | "MM/dd/yy" | // Gün/Ay/Yıl
"yyyy/MM/dd" | "yy/MM/dd" | "yyyy-MM-ddTHH:mm:ss" | "dd-MM-yyyy HH:mm:ss" | // Yıl/Ay/Gün Saat
"HH:mm:ss" | "hh:mm:ss a" | // Saat/Dakika/Saniye
"yyyy-MM-ddTHH:mm:ssZ" | "yyyy-MM-ddTHH:mm:ss.SSSZ" | // ISO 8601 formatları
"MMMM dd, yyyy HH:mm" | "dd MMMM yyyy HH:mm";
export type CurrencyFormatType = "n" | "c";
