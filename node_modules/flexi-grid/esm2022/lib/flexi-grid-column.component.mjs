import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class FlexiGridColumnComponent {
    constructor() {
        this.field = '';
        this.title = '';
        this.sortable = true;
        this.filterable = true;
        this.visible = true;
        this.filterType = "text";
        this.format = null;
        this.fraction = 2;
        this.symbol = "";
        this.showSymbolInFront = true;
        this.width = "100%";
        this.resizable = true;
        this.draggable = true;
        this.className = "";
        this.textAlign = "left";
        this.hideOverflow = true;
        this.value = "";
        this.filterOperator = "contains";
    }
    ngOnChanges(changes) {
        if (changes['filterType']) {
            this.setDefaultFilterOperator();
        }
    }
    setDefaultFilterOperator() {
        if (this.filterType === 'number') {
            this.filterOperator = 'eq';
        }
        else {
            this.filterOperator = 'contains';
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.6", ngImport: i0, type: FlexiGridColumnComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.0.6", type: FlexiGridColumnComponent, selector: "flexi-grid-column", inputs: { field: "field", title: "title", sortable: "sortable", filterable: "filterable", visible: "visible", filterType: "filterType", columnTemplate: "columnTemplate", format: "format", fraction: "fraction", symbol: "symbol", showSymbolInFront: "showSymbolInFront", width: "width", resizable: "resizable", draggable: "draggable", className: "className", textAlign: "textAlign", hideOverflow: "hideOverflow" }, host: { properties: { "attr.host-id": "\"flexi-grid-column-1\"" } }, usesOnChanges: true, ngImport: i0, template: '', isInline: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.6", ngImport: i0, type: FlexiGridColumnComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'flexi-grid-column',
                    host: { '[attr.host-id]': '"flexi-grid-column-1"' },
                    template: ''
                }]
        }], propDecorators: { field: [{
                type: Input
            }], title: [{
                type: Input
            }], sortable: [{
                type: Input
            }], filterable: [{
                type: Input
            }], visible: [{
                type: Input
            }], filterType: [{
                type: Input
            }], columnTemplate: [{
                type: Input
            }], format: [{
                type: Input
            }], fraction: [{
                type: Input
            }], symbol: [{
                type: Input
            }], showSymbolInFront: [{
                type: Input
            }], width: [{
                type: Input
            }], resizable: [{
                type: Input
            }], draggable: [{
                type: Input
            }], className: [{
                type: Input
            }], textAlign: [{
                type: Input
            }], hideOverflow: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxleGktZ3JpZC1jb2x1bW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvZmxleGktZ3JpZC9zcmMvbGliL2ZsZXhpLWdyaWQtY29sdW1uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBeUMsTUFBTSxlQUFlLENBQUM7O0FBT3hGLE1BQU0sT0FBTyx3QkFBd0I7SUFMckM7UUFNVyxVQUFLLEdBQVcsRUFBRSxDQUFDO1FBQ25CLFVBQUssR0FBVyxFQUFFLENBQUM7UUFDbkIsYUFBUSxHQUFZLElBQUksQ0FBQztRQUN6QixlQUFVLEdBQVksSUFBSSxDQUFDO1FBQzNCLFlBQU8sR0FBWSxJQUFJLENBQUM7UUFDeEIsZUFBVSxHQUFlLE1BQU0sQ0FBQztRQUVoQyxXQUFNLEdBQStDLElBQUksQ0FBQztRQUMxRCxhQUFRLEdBQVcsQ0FBQyxDQUFDO1FBQ3JCLFdBQU0sR0FBVyxFQUFFLENBQUM7UUFDcEIsc0JBQWlCLEdBQVksSUFBSSxDQUFDO1FBQ2xDLFVBQUssR0FBVyxNQUFNLENBQUM7UUFDdkIsY0FBUyxHQUFZLElBQUksQ0FBQztRQUMxQixjQUFTLEdBQVksSUFBSSxDQUFDO1FBQzFCLGNBQVMsR0FBVyxFQUFFLENBQUM7UUFDdkIsY0FBUyxHQUFrQixNQUFNLENBQUM7UUFDbEMsaUJBQVksR0FBWSxJQUFJLENBQUM7UUFFdEMsVUFBSyxHQUFXLEVBQUUsQ0FBQztRQUNuQixtQkFBYyxHQUFXLFVBQVUsQ0FBQztLQWVyQztJQWJDLFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxJQUFJLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDO1lBQzFCLElBQUksQ0FBQyx3QkFBd0IsRUFBRSxDQUFDO1FBQ2xDLENBQUM7SUFDSCxDQUFDO0lBRUQsd0JBQXdCO1FBQ3RCLElBQUksSUFBSSxDQUFDLFVBQVUsS0FBSyxRQUFRLEVBQUUsQ0FBQztZQUNqQyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztRQUM3QixDQUFDO2FBQU0sQ0FBQztZQUNOLElBQUksQ0FBQyxjQUFjLEdBQUcsVUFBVSxDQUFDO1FBQ25DLENBQUM7SUFDSCxDQUFDOzhHQWxDVSx3QkFBd0I7a0dBQXhCLHdCQUF3QiwraUJBRjFCLEVBQUU7OzJGQUVBLHdCQUF3QjtrQkFMcEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsbUJBQW1CO29CQUM3QixJQUFJLEVBQUUsRUFBRSxnQkFBZ0IsRUFBRSx1QkFBdUIsRUFBRTtvQkFDbkQsUUFBUSxFQUFDLEVBQUU7aUJBQ1o7OEJBRVUsS0FBSztzQkFBYixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLO2dCQUNHLFVBQVU7c0JBQWxCLEtBQUs7Z0JBQ0csT0FBTztzQkFBZixLQUFLO2dCQUNHLFVBQVU7c0JBQWxCLEtBQUs7Z0JBQ0csY0FBYztzQkFBdEIsS0FBSztnQkFDRyxNQUFNO3NCQUFkLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFDRyxNQUFNO3NCQUFkLEtBQUs7Z0JBQ0csaUJBQWlCO3NCQUF6QixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxTQUFTO3NCQUFqQixLQUFLO2dCQUNHLFNBQVM7c0JBQWpCLEtBQUs7Z0JBQ0csU0FBUztzQkFBakIsS0FBSztnQkFDRyxTQUFTO3NCQUFqQixLQUFLO2dCQUNHLFlBQVk7c0JBQXBCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2ZsZXhpLWdyaWQtY29sdW1uJyxcclxuICBob3N0OiB7ICdbYXR0ci5ob3N0LWlkXSc6ICdcImZsZXhpLWdyaWQtY29sdW1uLTFcIicgfSwgIFxyXG4gIHRlbXBsYXRlOicnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGbGV4aUdyaWRDb2x1bW5Db21wb25lbnQgeyBcclxuICBASW5wdXQoKSBmaWVsZDogc3RyaW5nID0gJyc7XHJcbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZyA9ICcnO1xyXG4gIEBJbnB1dCgpIHNvcnRhYmxlOiBib29sZWFuID0gdHJ1ZTtcclxuICBASW5wdXQoKSBmaWx0ZXJhYmxlOiBib29sZWFuID0gdHJ1ZTtcclxuICBASW5wdXQoKSB2aXNpYmxlOiBib29sZWFuID0gdHJ1ZTtcclxuICBASW5wdXQoKSBmaWx0ZXJUeXBlOiBGaWx0ZXJUeXBlID0gXCJ0ZXh0XCI7XHJcbiAgQElucHV0KCkgY29sdW1uVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4gfCBhbnk7XHJcbiAgQElucHV0KCkgZm9ybWF0OiBEYXRlRm9ybWF0VHlwZSB8IEN1cnJlbmN5Rm9ybWF0VHlwZSB8IG51bGwgPSBudWxsO1xyXG4gIEBJbnB1dCgpIGZyYWN0aW9uOiBudW1iZXIgPSAyO1xyXG4gIEBJbnB1dCgpIHN5bWJvbDogc3RyaW5nID0gXCJcIjtcclxuICBASW5wdXQoKSBzaG93U3ltYm9sSW5Gcm9udDogYm9vbGVhbiA9IHRydWU7XHJcbiAgQElucHV0KCkgd2lkdGg6IHN0cmluZyA9IFwiMTAwJVwiO1xyXG4gIEBJbnB1dCgpIHJlc2l6YWJsZTogYm9vbGVhbiA9IHRydWU7XHJcbiAgQElucHV0KCkgZHJhZ2dhYmxlOiBib29sZWFuID0gdHJ1ZTtcclxuICBASW5wdXQoKSBjbGFzc05hbWU6IHN0cmluZyA9IFwiXCI7XHJcbiAgQElucHV0KCkgdGV4dEFsaWduOiBUZXh0QWxpZ25UeXBlID0gXCJsZWZ0XCI7ICBcclxuICBASW5wdXQoKSBoaWRlT3ZlcmZsb3c6IGJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICB2YWx1ZTogc3RyaW5nID0gXCJcIjtcclxuICBmaWx0ZXJPcGVyYXRvcjogc3RyaW5nID0gXCJjb250YWluc1wiO1xyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcbiAgICBpZiAoY2hhbmdlc1snZmlsdGVyVHlwZSddKSB7XHJcbiAgICAgIHRoaXMuc2V0RGVmYXVsdEZpbHRlck9wZXJhdG9yKCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIHNldERlZmF1bHRGaWx0ZXJPcGVyYXRvcigpIHtcclxuICAgIGlmICh0aGlzLmZpbHRlclR5cGUgPT09ICdudW1iZXInKSB7XHJcbiAgICAgIHRoaXMuZmlsdGVyT3BlcmF0b3IgPSAnZXEnO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5maWx0ZXJPcGVyYXRvciA9ICdjb250YWlucyc7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgdHlwZSBUZXh0QWxpZ25UeXBlID0gXCJsZWZ0XCIgfCBcImNlbnRlclwiIHwgXCJyaWdodFwiO1xyXG5leHBvcnQgdHlwZSBGaWx0ZXJUeXBlID0gXCJ0ZXh0XCIgfCBcImRhdGVcIiB8IFwiZGF0ZS10aW1lXCIgfCBcIm51bWJlclwiXHJcbmV4cG9ydCB0eXBlIERhdGVGb3JtYXRUeXBlID0gXHJcbiAgXCJkXCIgfCBcImRkXCIgfCBcImRkZFwiIHwgXCJkZGRkXCIgfCAvLyBHw7xuXHJcbiAgXCJNXCIgfCBcIk1NXCIgfCBcIk1NTVwiIHwgXCJNTU1NXCIgfCAvLyBBeVxyXG4gIFwieXlcIiB8IFwieXl5eVwiIHwgLy8gWcSxbFxyXG4gIFwiaFwiIHwgXCJoaFwiIHwgXCJIXCIgfCBcIkhIXCIgfCAvLyBTYWF0XHJcbiAgXCJtXCIgfCBcIm1tXCIgfCAvLyBEYWtpa2FcclxuICBcInNcIiB8IFwic3NcIiB8IC8vIFNhbml5ZVxyXG4gIFwiZGQuTU0ueXl5eVwiIHwgXCJNTS9kZC95eXl5XCIgfCBcInl5eXktTU0tZGRcIiB8IFwiZGQgTU1NTSB5eXl5XCIgfCBcIk1NTU0gZGQsIHl5eXlcIiB8XHJcbiAgXCJkL00veXl5eVwiIHwgXCJkL00veXlcIiB8IFwiZGQvTU0veXl5eVwiIHwgXCJNTS9kZC95eVwiIHwgLy8gR8O8bi9BeS9ZxLFsXHJcbiAgXCJ5eXl5L01NL2RkXCIgfCBcInl5L01NL2RkXCIgfCBcInl5eXktTU0tZGRUSEg6bW06c3NcIiB8IFwiZGQtTU0teXl5eSBISDptbTpzc1wiIHwgLy8gWcSxbC9BeS9Hw7xuIFNhYXRcclxuICBcIkhIOm1tOnNzXCIgfCBcImhoOm1tOnNzIGFcIiB8IC8vIFNhYXQvRGFraWthL1Nhbml5ZVxyXG4gIFwieXl5eS1NTS1kZFRISDptbTpzc1pcIiB8IFwieXl5eS1NTS1kZFRISDptbTpzcy5TU1NaXCIgfCAvLyBJU08gODYwMSBmb3JtYXRsYXLEsVxyXG4gIFwiTU1NTSBkZCwgeXl5eSBISDptbVwiIHwgXCJkZCBNTU1NIHl5eXkgSEg6bW1cIjsgLy8gw5Z6ZWwgZm9ybWF0bGFyXHJcblxyXG4gIGV4cG9ydCB0eXBlIEN1cnJlbmN5Rm9ybWF0VHlwZSA9IFwiblwiIHwgXCJjXCIiXX0=