{"version":3,"file":"flexi-grid.mjs","sources":["../../../projects/flexi-grid/src/lib/flexi-grid-column.component.ts","../../../projects/flexi-grid/src/lib/state.model.ts","../../../projects/flexi-grid/src/lib/flexi-grid.component.ts","../../../projects/flexi-grid/src/lib/flexi-grid.component.html","../../../projects/flexi-grid/src/lib/flexi-grid.service.ts","../../../projects/flexi-grid/src/lib/flexi-grid.module.ts","../../../projects/flexi-grid/src/flexi-grid.ts"],"sourcesContent":["import { Component, Input, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'flexi-grid-column',\r\n  host: { '[attr.host-id]': '\"flexi-grid-column-1\"' },  \r\n  template:''\r\n})\r\nexport class FlexiGridColumnComponent { \r\n  @Input() field: string = '';\r\n  @Input() title: string = '';\r\n  @Input() sortable: boolean = true;\r\n  @Input() filterable: boolean = true;\r\n  @Input() visible: boolean = true;\r\n  @Input() filterType: FilterType = \"text\";\r\n  @Input() columnTemplate: TemplateRef<any> | any;\r\n  @Input() format: DateFormatType | CurrencyFormatType | null = null;\r\n  @Input() fraction: number = 2;\r\n  @Input() symbol: string = \"\";\r\n  @Input() showSymbolInFront: boolean = true;\r\n  @Input() width: string = \"100%\";\r\n  @Input() resizable: boolean = true;\r\n  @Input() draggable: boolean = true;\r\n  @Input() className: string = \"\";\r\n  @Input() textAlign: TextAlignType = \"left\";  \r\n  @Input() hideOverflow: boolean = true;\r\n\r\n  value: string = \"\";\r\n  filterOperator: string = \"contains\";\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['filterType']) {\r\n      this.setDefaultFilterOperator();\r\n    }\r\n  }\r\n  \r\n  setDefaultFilterOperator() {\r\n    if (this.filterType === 'number') {\r\n      this.filterOperator = 'eq';\r\n    } else {\r\n      this.filterOperator = 'contains';\r\n    }\r\n  }\r\n}\r\n\r\nexport type TextAlignType = \"left\" | \"center\" | \"right\";\r\nexport type FilterType = \"text\" | \"date\" | \"date-time\" | \"number\"\r\nexport type DateFormatType = \r\n  \"d\" | \"dd\" | \"ddd\" | \"dddd\" | // Gün\r\n  \"M\" | \"MM\" | \"MMM\" | \"MMMM\" | // Ay\r\n  \"yy\" | \"yyyy\" | // Yıl\r\n  \"h\" | \"hh\" | \"H\" | \"HH\" | // Saat\r\n  \"m\" | \"mm\" | // Dakika\r\n  \"s\" | \"ss\" | // Saniye\r\n  \"dd.MM.yyyy\" | \"MM/dd/yyyy\" | \"yyyy-MM-dd\" | \"dd MMMM yyyy\" | \"MMMM dd, yyyy\" |\r\n  \"d/M/yyyy\" | \"d/M/yy\" | \"dd/MM/yyyy\" | \"MM/dd/yy\" | // Gün/Ay/Yıl\r\n  \"yyyy/MM/dd\" | \"yy/MM/dd\" | \"yyyy-MM-ddTHH:mm:ss\" | \"dd-MM-yyyy HH:mm:ss\" | // Yıl/Ay/Gün Saat\r\n  \"HH:mm:ss\" | \"hh:mm:ss a\" | // Saat/Dakika/Saniye\r\n  \"yyyy-MM-ddTHH:mm:ssZ\" | \"yyyy-MM-ddTHH:mm:ss.SSSZ\" | // ISO 8601 formatları\r\n  \"MMMM dd, yyyy HH:mm\" | \"dd MMMM yyyy HH:mm\"; // Özel formatlar\r\n\r\n  export type CurrencyFormatType = \"n\" | \"c\"","import { FilterType } from \"./flexi-grid-column.component\";\r\n\r\nexport class StateModel{\r\n    pageNumber: number = 1;\r\n    pageSize: number = 10;\r\n    skip: number = 0;\r\n    sort: StateOrderModel = new StateOrderModel();\r\n    filter: StateFilterModel[] = [];\r\n  }\r\n\r\n  export class StateOrderModel{\r\n    dir: string = \"\";\r\n    field: string = \"\";\r\n  } \r\n\r\n  export class StateFilterModel{\r\n    field: string = \"\";\r\n    value: string = \"\";\r\n    operator: string = \"contains\";\r\n    type: FilterType = \"text\";\r\n  }","import { AfterViewInit, ChangeDetectorRef, Component, ContentChildren, ElementRef, EventEmitter, HostListener, Input, OnChanges, Output, QueryList, SimpleChanges, TemplateRef, ViewChild, ViewEncapsulation, computed, signal } from '@angular/core';\r\nimport { FilterType, FlexiGridColumnComponent } from './flexi-grid-column.component';\r\nimport { StateFilterModel, StateModel } from './state.model';\r\n\r\n@Component({\r\n  selector: 'flexi-grid',\r\n  templateUrl: './flexi-grid.component.html',\r\n  styleUrl: `./flexi-grid.component.css`,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class FlexiGridComponent implements OnChanges, AfterViewInit { \r\n  @Input() data: any[] = [];\r\n  @Input() total: number | null | undefined = 0;\r\n  @Input() pageable: boolean = false;\r\n  @Input() pageSize: number = 10;\r\n  @Input() showIndex: boolean = false;\r\n  @Input() pageSizeList: number[] = [5, 10, 20, 30, 50, 100, 500, 1000];\r\n  @Input() loading: boolean = false;\r\n  @Input() sortable: boolean = false;\r\n  @Input() themeClass: string = \"light\";\r\n  @Input() height: string = \"420px\";\r\n  @Input() filterable: boolean = false;\r\n  @Input() captionTitle: string = \"\";\r\n  @Input() captionTemplate: TemplateRef<any> | any;\r\n  @Input() footerTemplate: TemplateRef<any> | any;\r\n  @Input() showColumnVisibility: boolean = true;\r\n  @Input() showRefreshData: boolean = true;\r\n  @Input() dataBinding: boolean = false;\r\n  @Input() showCaption: boolean = false;\r\n  @Input() showExportExcel: boolean = false;\r\n  @Input() autoHeight: boolean = false;\r\n  @Input() minWidth: string = \"1050px\";\r\n  @Input() useMinWidth: boolean = false;\r\n  @Input() autoWidth: boolean = false;\r\n  @Input() width: string = \"100%\";\r\n  @Input() indexWidth: string = \"70px\";\r\n  @Input() columnVisibilityBtnClass: string = \"flexi-grid-btn\";\r\n  @Input() refreshDataBtnClass: string = \"flexi-grid-btn\";\r\n  @Input() exportExcelBtnClass: string = \"flexi-grid-btn\";\r\n  @Input() exportExcelFileName: string = \"excel-export\";\r\n  @Input() exportExcelButtonClick: (() => void) | undefined;\r\n  @Input() footerPerPageText: string = \"items per page\";\r\n  @Input() resizable: boolean = false;\r\n  @Input() draggable: boolean = false;\r\n  @Input() tbodyStyle: any = {};\r\n  @Input() trMinHeight: string = \"45px\";\r\n\r\n  pageNumberCount = signal<number>(5);\r\n  pageNumbers = signal<number[]>([]);\r\n  totalPageCount = signal<number>(0);\r\n  state: StateModel = new StateModel();\r\n  pagedData = signal<any[]>([]);\r\n  timeoutId: any;\r\n  filterDropdownVisible = signal<{ [key: string]: boolean }>({});\r\n  columnVisibilityDropdownVisible = signal(false);\r\n  textFilterTypes = signal<{ operator: string, value: string }[]>([\r\n    { operator: \"eq\", value: 'Eşittir' },\r\n    { operator: \"ne\", value: 'Eşit değildir' },\r\n    { operator: \"contains\", value: 'İçerir' },\r\n    { operator: \"not contains\", value: 'İçermez' },\r\n    { operator: \"startswith\", value: 'İle başlar' },\r\n    { operator: \"endswith\", value: 'İle biter' }\r\n  ]);\r\n  numberFilterTypes = signal<{ operator: string, value: string }[]>([\r\n    { operator: \"eq\", value: 'Eşittir' },\r\n    { operator: \"ne\", value: 'Eşit değildir' },\r\n    { operator: \"gt\", value: 'Daha büyüktür' },\r\n    { operator: \"ge\", value: 'Daha büyüktür ya da eşittir' },\r\n    { operator: \"lt\", value: 'Daha küçüktür' },\r\n    { operator: \"le\", value: 'Daha küçüktür ya da eşittir' }\r\n  ]);\r\n  draggedColumnIndex: number | undefined;\r\n  tempDraggable: boolean = false;\r\n\r\n  @Output() dataStateChange = new EventEmitter<any>();\r\n\r\n  @ContentChildren(FlexiGridColumnComponent) columns: QueryList<FlexiGridColumnComponent> | undefined;\r\n\r\n  @ViewChild('table') table: ElementRef | undefined;\r\n  @ViewChild(\"flexiGridFilterTr\") flexiGridFilterTr: ElementRef<HTMLTableRowElement> | undefined;\r\n  resizingColumn: any;\r\n  startX: number | undefined;\r\n  startWidth: number | undefined;\r\n  isShowMobileFilter = signal<boolean>(false);\r\n\r\n  constructor(private cdr: ChangeDetectorRef){}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {    \r\n   // console.log(\"change is working...\");\r\n       \r\n    if(this.data.length > 0){\r\n      if (!this.columns || this.columns.length === 0) {\r\n        this.initializeColumnsFromData();\r\n        this.cdr.detectChanges();\r\n      }\r\n    }\r\n    if (this.pageSize !== this.state.pageSize) {     \r\n      this.state.pageSize = +this.pageSize;\r\n    }\r\n\r\n    if (this.pageable) {\r\n      this.setPageNumbers();\r\n      this.updatePagedData();\r\n    } else {\r\n      this.pagedData.set(this.data);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (!this.columns || this.columns.length === 0) {\r\n      this.initializeColumnsFromData();\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  initializeColumnsFromData(): void {\r\n    if (this.data && this.data.length > 0) {\r\n      const firstItem = this.data[0];\r\n      const columnsArray = Object.keys(firstItem).map(key => {\r\n        const column = new FlexiGridColumnComponent();\r\n        column.field = key;\r\n        column.title = this.capitalizeFirstLetter(key);\r\n        column.visible = true;\r\n        column.hideOverflow = true;\r\n        return column;\r\n      });\r\n  \r\n      // Resetting columns with the newly created columns array\r\n      if (this.columns) {\r\n        this.columns.reset(columnsArray);\r\n      }\r\n    }\r\n  }\r\n\r\n  capitalizeFirstLetter(string: string): string {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  changePage(pageNumber: number) {\r\n    if (pageNumber > this.totalPageCount()) {\r\n      pageNumber = this.totalPageCount();\r\n    } else if (pageNumber < 1) {\r\n      pageNumber = 1;\r\n    }\r\n\r\n    const previousPageNumber = this.state.pageNumber;\r\n    this.state.pageNumber = +pageNumber;\r\n    this.state.skip = (pageNumber - 1) * +this.state.pageSize;\r\n    this.dataStateChange.emit(this.state);\r\n\r\n    // Check if the page number crossed a 10-page boundary\r\n    const previousGroup = Math.floor((previousPageNumber - 1) / this.pageNumberCount());\r\n    const currentGroup = Math.floor((pageNumber - 1) / this.pageNumberCount());\r\n\r\n    if (currentGroup > previousGroup) {\r\n      this.nextPageGroup();\r\n    } else if (currentGroup < previousGroup) {\r\n      this.previousPageGroup();\r\n    } else {      \r\n      this.setPageNumbers();\r\n    }\r\n\r\n    this.updatePagedData();\r\n  }\r\n\r\n  setPageNumbers() {    \r\n    const pageCount = Math.ceil(this.total! / +this.state.pageSize);\r\n    const numbers = [];\r\n\r\n    // Calculate the current range of page numbers\r\n    const currentGroup = Math.floor((this.state.pageNumber - 1) / this.pageNumberCount());\r\n    const startPage = currentGroup * this.pageNumberCount() + 1;\r\n    const endPage = Math.min(startPage + (this.pageNumberCount() - 1), pageCount);\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      numbers.push(i);\r\n    }\r\n    \r\n    this.pageNumbers.set(numbers);\r\n    this.totalPageCount.set(pageCount);\r\n  }\r\n\r\n  nextPageGroup() {\r\n    const pageCount = Math.ceil(this.total! / +this.state.pageSize);\r\n    const currentGroup = Math.floor((this.state.pageNumber - 1) / this.pageNumberCount());\r\n    const nextGroupStartPage = (currentGroup) * this.pageNumberCount() + 1;\r\n\r\n    if (nextGroupStartPage <= pageCount) {\r\n      this.state.pageNumber = nextGroupStartPage;\r\n    }\r\n\r\n    this.setPageNumbers();\r\n    this.updatePagedData();\r\n  }\r\n\r\n  previousPageGroup() {\r\n    const currentGroup = Math.floor((this.state.pageNumber - 1) / this.pageNumberCount());\r\n    const previousGroupStartPage = (currentGroup) * this.pageNumberCount() + 1;\r\n\r\n    if (previousGroupStartPage > 0) {\r\n      this.state.pageNumber = previousGroupStartPage;\r\n    }\r\n\r\n    this.setPageNumbers();\r\n    this.updatePagedData();\r\n  }\r\n\r\n  changePageSize(event:any) {\r\n    const value = +event.target.value;\r\n    this.state.pageSize = value;\r\n    this.state.pageNumber = 1;\r\n    this.state.skip = 0;\r\n    if (this.pageable && this.dataBinding) {\r\n      this.dataStateChange.emit(this.state);\r\n    } else {\r\n      this.updatePagedData();\r\n    }\r\n  }\r\n\r\n  updatePagedData() {\r\n    let filteredData = this.data;\r\n    \r\n    if(!filteredData) {\r\n      this.pagedData.set([]);\r\n      return;\r\n    }\r\n\r\n    if (this.filterable && this.state.filter.length > 0 && !this.dataBinding) {\r\n      const filters = this.state.filter.filter(p=> p.value);\r\n\r\n      filters.forEach(filter => {\r\n        filteredData = filteredData.filter(item => {\r\n          const field = filter.field;\r\n          const value = filter.value;\r\n          const itemValue = item[field].toString().toLocaleLowerCase('tr');\r\n          const filterValue = value.toString().toLocaleLowerCase('tr');\r\n\r\n          switch (filter.operator) {\r\n            case 'eq':\r\n              return itemValue === filterValue;\r\n            case 'ne':\r\n              return itemValue !== filterValue;\r\n            case 'contains':\r\n              return itemValue.includes(filterValue);\r\n            case 'not contains':\r\n              return !itemValue.includes(filterValue);\r\n            case 'startswith':\r\n              return itemValue.startsWith(filterValue);\r\n            case 'endswith':\r\n              return itemValue.endsWith(filterValue);\r\n            case 'gt':\r\n              return parseFloat(itemValue) > parseFloat(filterValue);\r\n            case 'ge':\r\n              return parseFloat(itemValue) >= parseFloat(filterValue);\r\n            case 'lt':\r\n              return parseFloat(itemValue) < parseFloat(filterValue);\r\n            case 'le':\r\n              return parseFloat(itemValue) <= parseFloat(filterValue);\r\n            default:\r\n              return true;\r\n          }\r\n        });\r\n      });\r\n    }\r\n  \r\n    // Order data if sortable is true\r\n    if (this.sortable && this.state.sort.field && !this.dataBinding) {\r\n      filteredData = filteredData.sort((a, b) => {\r\n        const field = this.state.sort.field;\r\n        const dir = this.state.sort.dir === 'asc' ? 1 : -1;\r\n        if (a[field] < b[field]) return -1 * dir;\r\n        if (a[field] > b[field]) return 1 * dir;\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    if(!this.dataBinding){\r\n      this.total = filteredData.length;\r\n      this.setPageNumbers();\r\n    }\r\n  \r\n    // Pagination logic\r\n    if(filteredData){\r\n      if (filteredData.length > +this.state.pageSize && !this.dataBinding && this.pageable) {\r\n        const start = this.state.skip;\r\n        const end = start + +this.state.pageSize;\r\n        this.pagedData.set(filteredData.slice(start, end));\r\n      } else {\r\n        this.pagedData.set(filteredData);\r\n      }\r\n    }\r\n  }\r\n\r\n  sortData() {\r\n    this.data = this.data.sort((a, b) => {\r\n      const field = this.state.sort.field;\r\n      const dir = this.state.sort.dir === 'asc' ? 1 : -1;\r\n      if (a[field] < b[field]) return -1 * dir;\r\n      if (a[field] > b[field]) return 1 * dir;\r\n      return 0;\r\n    });\r\n\r\n    if(this.dataBinding){\r\n      this.dataStateChange.emit(this.state);\r\n    }else{\r\n      this.updatePagedData();\r\n    }\r\n  }\r\n\r\n  sort(field: string) {\r\n    this.state.sort.field = field;\r\n    this.state.pageNumber = 1;\r\n    if (this.state.sort.dir === \"asc\") {\r\n      this.state.sort.dir = \"desc\";\r\n    } else if (this.state.sort.dir === 'desc') {\r\n      this.state.sort.dir = \"\";\r\n      this.state.sort.field = '';\r\n    } else {\r\n      this.state.sort.dir = 'asc'\r\n    }\r\n\r\n    this.sortData();\r\n  }\r\n\r\n  toggleTheme() {\r\n    this.themeClass = this.themeClass === 'light' ? 'dark' : 'light';\r\n  }\r\n\r\n  toggleFilterDropdown(field: string) {\r\n    this.filterDropdownVisible()[field] = !this.filterDropdownVisible()[field];\r\n  }\r\n\r\n  applyFilter(column: FlexiGridColumnComponent, operator: string){    \r\n    this.filterDropdownVisible()[column.field] = false;    \r\n    column.filterOperator = operator;\r\n    if(column.value !== \"\"){\r\n      this.filter(column.field, operator, column.value, column.filterType);\r\n    }\r\n  }\r\n\r\n  filter(field: string, operator: string, value: string, type: FilterType) {\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n    }\r\n\r\n    this.timeoutId = setTimeout(() => {      \r\n      if (value !== \"\") {\r\n        this.state.pageNumber = 1;\r\n        this.state.skip = 0;\r\n        let filterField = this.state.filter.find(p => p.field === field);\r\n        if (filterField) {\r\n          filterField.value = value;\r\n          filterField.operator = operator;\r\n        } else {\r\n          filterField = new StateFilterModel();\r\n          filterField.field = field;\r\n          filterField.operator = operator;\r\n          filterField.value = value;\r\n          filterField.type = type\r\n          this.state.filter.push(filterField);\r\n        }\r\n      } else {\r\n        const findIndex = this.state.filter.findIndex(p => p.field === field);\r\n\r\n        if (findIndex > -1) {\r\n          this.state.filter.splice(findIndex, 1);\r\n        }\r\n      }\r\n\r\n      if(this.dataBinding){\r\n        this.dataStateChange.emit(this.state);\r\n      }else{\r\n        this.updatePagedData();\r\n      }\r\n    }, this.dataBinding ? 500 : 1);\r\n  }\r\n\r\n  showClearFilter(value: any) {\r\n    if (value) return true;\r\n    return false;\r\n  }\r\n\r\n  clearFilter(field: string) {\r\n    this.filter(field, \"contains\", \"\", \"text\");\r\n    const column = this.columns?.find(p => p.field === field);\r\n    if (column) {\r\n      column.value = \"\";\r\n    }\r\n\r\n    if(this.dataBinding){\r\n\r\n    }else{\r\n      this.updatePagedData();\r\n    }\r\n  }\r\n\r\n  toggleColumnVisibilityDropdown() {\r\n    this.columnVisibilityDropdownVisible.set(!this.columnVisibilityDropdownVisible())\r\n  }\r\n\r\n  refreshDataMethod(){\r\n    this.state = new StateModel();\r\n    this.state.pageSize = this.pageSize;\r\n    this.columns?.forEach(val => {\r\n      val.value = \"\";\r\n    });\r\n    this.dataStateChange.emit(this.state);\r\n  }\r\n\r\n  closeAllDropdowns(){\r\n    for(let i in this.filterDropdownVisible()){\r\n      this.filterDropdownVisible()[i] = false;      \r\n    }\r\n  }\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  handleClick(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (!target.closest('.dropdown-menu') && !target.closest('.svg')) {\r\n      this.closeAllDropdowns();\r\n    }\r\n\r\n    if(!target.closest('.dropdown-menu') && !target.closest('button')){\r\n      this.columnVisibilityDropdownVisible.set(false);\r\n    }\r\n  }  \r\n\r\n  onExportExcelButtonClick() {\r\n    if (this.exportExcelButtonClick) {\r\n      this.exportExcelButtonClick();\r\n    } else {\r\n      this.exportExcel();\r\n    }\r\n  }\r\n\r\n  exportExcel() {\r\n    const visibleColumns: any[] = this.columns?.filter(column => column.visible).map(column => {\r\n      return { field: column.field, title: column.title || column.field };\r\n    }) || [];\r\n  \r\n    let csvData = visibleColumns.map(col => col.title).join(',') + '\\n';\r\n\r\n    let exportData = this.data;\r\n\r\n    exportData.forEach(row => {\r\n      let rowData = visibleColumns.map(col => {\r\n        // Hücre içeriğindeki virgüller ve çift tırnakları kaçış karakteri ile değiştir\r\n        const cellData = row[col.field] ? row[col.field].toString().replace(/\"/g, '\"\"') : '';\r\n        return `\"${cellData}\"`;\r\n      }).join(',');\r\n      csvData += rowData + '\\n';\r\n    });\r\n  \r\n    const blob = new Blob([csvData], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.setAttribute('hidden', '');\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', this.exportExcelFileName + '.csv');\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  }\r\n\r\n  onMouseDown(event: MouseEvent | any, column: any) {\r\n    this.resizingColumn = column;\r\n    this.startX = event.pageX;\r\n    this.startWidth = event.target!.parentElement.offsetWidth;\r\n\r\n    // Eğer draggable ise, geçici olarak devre dışı bırak\r\n    if (this.draggable) {\r\n      this.tempDraggable = this.draggable;\r\n      this.draggable = false;\r\n    }\r\n    \r\n    document.addEventListener('mousemove', this.onMouseMove);\r\n    document.addEventListener('mouseup', this.onMouseUp);\r\n  }\r\n\r\n  @HostListener('document:mousemove', ['$event'])\r\n  onMouseMove = (event: MouseEvent) => {\r\n    if (this.resizingColumn) {\r\n      const offset = event.pageX - this.startX!;\r\n      this.resizingColumn.width = this.startWidth! + offset + 'px';\r\n    }\r\n  }\r\n\r\n  @HostListener('document:mouseup')\r\n  onMouseUp = () => {\r\n    this.resizingColumn = undefined;\r\n    document.removeEventListener('mousemove', this.onMouseMove);\r\n    document.removeEventListener('mouseup', this.onMouseUp);\r\n\r\n    // Resize işlemi bittiğinde draggable durumunu geri yükle\r\n    if (this.tempDraggable) {\r\n      this.draggable = this.tempDraggable;\r\n      this.tempDraggable = false;\r\n    }\r\n  }\r\n\r\n  onDragStart(event: DragEvent, index: number) {\r\n    this.draggedColumnIndex = index;\r\n  }\r\n\r\n  onDragOver(event: DragEvent, index: number) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  onDrop(event: DragEvent, index: number) {\r\n    event.preventDefault();\r\n    if (this.draggedColumnIndex === undefined) return;\r\n\r\n    const draggedColumn = this.columns?.toArray()[this.draggedColumnIndex];\r\n    const targetColumn = this.columns?.toArray()[index];\r\n\r\n    if (draggedColumn && targetColumn) {\r\n      const columnsArray = this.columns?.toArray();\r\n\r\n      // Remove dragged column and insert it at the new position\r\n      columnsArray!.splice(this.draggedColumnIndex, 1);\r\n      columnsArray!.splice(index, 0, draggedColumn);\r\n\r\n      this.columns?.reset(columnsArray!);\r\n    }\r\n\r\n    this.draggedColumnIndex = undefined;\r\n  }\r\n\r\n  getFieldValue(item: any, field: string){\r\n    if(!field.includes(\".\")){\r\n      return item[field]\r\n    }else{\r\n      const fields = field.split(\".\");\r\n      if(fields.length === 2){\r\n       return item[fields[0]][fields[1]]\r\n      }else{\r\n        console.log(\"Value not found!\");        \r\n        return \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  openMobileFilter(){\r\n    this.flexiGridFilterTr!.nativeElement.classList.add(\"show\");\r\n    this.isShowMobileFilter.set(true);\r\n  }\r\n\r\n  closeMobileFilter(){\r\n    this.flexiGridFilterTr!.nativeElement.classList.remove(\"show\");\r\n    this.isShowMobileFilter.set(false);\r\n  }\r\n}","<title>Angular Flexi Grid</title>\r\n<div [attr.data-bs-theme]=\"themeClass\" class=\"flexi-grid-table-container overflow-x\" [ngStyle]=\"{'width': autoWidth ? '100%' : width}\">\r\n  @if(showCaption){\r\n    <div class=\"flexi-grid-caption-div\">\r\n      <h3>{{captionTitle}}</h3>\r\n      <div class=\"d-flex\" style=\"gap: 10px;\">      \r\n        <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\r\n        @if(showExportExcel){\r\n          <button [ngClass]=\"exportExcelBtnClass\" (click)=\"onExportExcelButtonClick()\">\r\n            <svg style=\"width: 13px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d=\"M64 0C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H320c35.3 0 64-28.7 64-64V160H256c-17.7 0-32-14.3-32-32V0H64zM256 0V128H384L256 0zM155.7 250.2L192 302.1l36.3-51.9c7.6-10.9 22.6-13.5 33.4-5.9s13.5 22.6 5.9 33.4L221.3 344l46.4 66.2c7.6 10.9 5 25.8-5.9 33.4s-25.8 5-33.4-5.9L192 385.8l-36.3 51.9c-7.6 10.9-22.6 13.5-33.4 5.9s-13.5-22.6-5.9-33.4L162.7 344l-46.4-66.2c-7.6-10.9-5-25.8 5.9-33.4s25.8-5 33.4 5.9z\"/></svg>\r\n          </button>\r\n        }\r\n        @if(showColumnVisibility){\r\n          <button [ngClass]=\"columnVisibilityBtnClass\" title=\"Column Visibility\" (click)=\"toggleColumnVisibilityDropdown()\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"cursor\" style=\"width: 15px;\" viewBox=\"0 0 512 512\"><path d=\"M40 48C26.7 48 16 58.7 16 72v48c0 13.3 10.7 24 24 24H88c13.3 0 24-10.7 24-24V72c0-13.3-10.7-24-24-24H40zM192 64c-17.7 0-32 14.3-32 32s14.3 32 32 32H480c17.7 0 32-14.3 32-32s-14.3-32-32-32H192zm0 160c-17.7 0-32 14.3-32 32s14.3 32 32 32H480c17.7 0 32-14.3 32-32s-14.3-32-32-32H192zm0 160c-17.7 0-32 14.3-32 32s14.3 32 32 32H480c17.7 0 32-14.3 32-32s-14.3-32-32-32H192zM16 232v48c0 13.3 10.7 24 24 24H88c13.3 0 24-10.7 24-24V232c0-13.3-10.7-24-24-24H40c-13.3 0-24 10.7-24 24zM40 368c-13.3 0-24 10.7-24 24v48c0 13.3 10.7 24 24 24H88c13.3 0 24-10.7 24-24V392c0-13.3-10.7-24-24-24H40z\"/></svg>\r\n            <div class=\"flexi-grid-dropdown-menu\" [class.show]=\"columnVisibilityDropdownVisible()\">\r\n              <p class=\"flexi-grid-dropdown-title\">Column Visibility</p>\r\n              @for(column of columns; track $index){\r\n                <label class=\"flexi-grid-dropdown-checkbox-item\" [for]=\"column.field\">\r\n                  <input [(ngModel)]=\"column.visible\" [id]=\"column.field\" type=\"checkbox\">\r\n                  {{ column.title ? column.title : column.field }}\r\n                </label>                    \r\n              }                    \r\n            </div>\r\n          </button>\r\n        }\r\n        @if(showRefreshData && dataBinding){\r\n          <button [ngClass]=\"refreshDataBtnClass\" (click)=\"refreshDataMethod()\">\r\n            <svg style=\"width: 13px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d=\"M463.5 224H472c13.3 0 24-10.7 24-24V72c0-9.7-5.8-18.5-14.8-22.2s-19.3-1.7-26.2 5.2L413.4 96.6c-87.6-86.5-228.7-86.2-315.8 1c-87.5 87.5-87.5 229.3 0 316.8s229.3 87.5 316.8 0c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0c-62.5 62.5-163.8 62.5-226.3 0s-62.5-163.8 0-226.3c62.2-62.2 162.7-62.5 225.3-1L327 183c-6.9 6.9-8.9 17.2-5.2 26.2s12.5 14.8 22.2 14.8H463.5z\"/></svg>\r\n          </button>\r\n        }\r\n        <div style=\"margin-right: 10px;\"></div>\r\n      </div>\r\n    </div>\r\n  }\r\n <table [ngStyle]=\"{'min-width': !useMinWidth ? '100%' : minWidth}\">\r\n   <thead>     \r\n     <tr>\r\n       @if(showIndex){\r\n         <th [ngStyle]=\"{'width': indexWidth}\">#</th>\r\n       }\r\n       @for(column of columns; track $index){          \r\n         @if(sortable && column.sortable && column.field && data.length > 0){\r\n           <th [ngStyle]=\"{'width': column.width}\" class=\"cursor flexi-grid-border\" [hidden]=\"!column.visible\"\r\n               [draggable]=\"(draggable && column.draggable)\"\r\n               (dragstart)=\"onDragStart($event, $index)\" \r\n               (dragover)=\"onDragOver($event, $index)\" \r\n               (drop)=\"onDrop($event, $index)\">\r\n             @if(resizable && column.resizable){\r\n               <div class=\"flexi-grid-resize-handle\" (mousedown)=\"onMouseDown($event, column)\"></div>\r\n             }\r\n             <div (click)=\"sort(column.field)\">\r\n               <span>{{ column.title ? column.title : column.field }}</span>\r\n               <span class=\"ms-2\">\r\n                 @if(this.state.sort.field === column.field){\r\n                   <span *ngIf=\"state.sort.field === column.field\">\r\n                     {{ state.sort.dir === 'asc' ? '↑' : '↓' }}\r\n                   </span>\r\n                 }\r\n               </span>\r\n             </div>              \r\n           </th>\r\n         }@else {\r\n           <th \r\n             [draggable]=\"(draggable && column.draggable)\" \r\n             [ngStyle]=\"{'width': column.width}\" \r\n             class=\"flexi-grid-border\" \r\n             [hidden]=\"!column.visible\"\r\n             (dragstart)=\"onDragStart($event, $index)\" \r\n             (dragover)=\"onDragOver($event, $index)\" \r\n             (drop)=\"onDrop($event, $index)\">\r\n             @if(resizable && column.resizable){\r\n               <div class=\"flexi-grid-resize-handle\" (mousedown)=\"onMouseDown($event, column)\"></div>\r\n             }\r\n             <div>\r\n               <span>{{ column.title ? column.title : column.field }}</span>\r\n             </div>\r\n           </th>\r\n         }\r\n       }\r\n     </tr> \r\n     @if(filterable){\r\n      <tr class=\"flexi-grid-mobile-filter-tr\">\r\n        <th colSpan=\"2\">\r\n          @if(isShowMobileFilter()){\r\n            <button class=\"flexi-grid-btn\" (click)=\"closeMobileFilter()\">              \r\n              <svg class=\"svg-mobile cursor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M3.9 22.9C10.5 8.9 24.5 0 40 0H472c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L396.4 195.6C316.2 212.1 256 283 256 368c0 27.4 6.3 53.4 17.5 76.5c-1.6-.8-3.2-1.8-4.7-2.9l-64-48c-8.1-6-12.8-15.5-12.8-25.6V288.9L9 65.3C-.7 53.4-2.8 36.8 3.9 22.9zM432 224a144 144 0 1 1 0 288 144 144 0 1 1 0-288zm59.3 107.3c6.2-6.2 6.2-16.4 0-22.6s-16.4-6.2-22.6 0L432 345.4l-36.7-36.7c-6.2-6.2-16.4-6.2-22.6 0s-6.2 16.4 0 22.6L409.4 368l-36.7 36.7c-6.2 6.2-6.2 16.4 0 22.6s16.4 6.2 22.6 0L432 390.6l36.7 36.7c6.2 6.2 16.4 6.2 22.6 0s6.2-16.4 0-22.6L454.6 368l36.7-36.7z\"/></svg>\r\n              Filtreyi Kapat\r\n            </button>\r\n          }@else {\r\n            <button class=\"flexi-grid-btn\" (click)=\"openMobileFilter()\">\r\n              <svg class=\"svg-mobile cursor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M3.9 54.9C10.5 40.9 24.5 32 40 32H472c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9V448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6V320.9L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z\"/></svg>\r\n              Filtreyi Aç\r\n            </button>\r\n          }\r\n        </th>\r\n      </tr>\r\n      <tr class=\"flexi-grid-filter-tr\" #flexiGridFilterTr>\r\n        @if(showIndex && !isShowMobileFilter()){\r\n          <th class=\"flexi-grid-filter-th\" [ngStyle]=\"{'width': indexWidth}\"></th>\r\n        }\r\n        @for(column of columns; track $index){          \r\n          @if(column.filterable && column.field){            \r\n            <th class=\"flexi-grid-filter-th\" [hidden]=\"!column.visible\" [attr.data-label]=\"column.title ? column.title : column.field\">\r\n              <div class=\"d-flex flexi-grid-filter-container\">\r\n                @if(column.filterType === \"text\"){\r\n                  <input class=\"flexi-grid-filter-input\" type=\"text\" [(ngModel)]=\"column.value\" (input)=\"filter(column.field, column.filterOperator, column.value, column.filterType)\">\r\n                  @if(!column.value){\r\n                    <svg class=\"svg cursor show-filter\" (click)=\"toggleFilterDropdown(column.field)\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M3.9 54.9C10.5 40.9 24.5 32 40 32H472c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9V448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6V320.9L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z\"/></svg>\r\n                    <div class=\"flexi-grid-dropdown-menu\" [class.show]=\"filterDropdownVisible()[column.field]\">\r\n                      @for(filterType of textFilterTypes(); track filterType.operator){\r\n                        <a class=\"flexi-grid-dropdown-item\" [ngClass]=\"column.filterOperator === filterType.operator ? 'flexi-grid-active' : ''\" (click)=\"applyFilter(column, filterType.operator)\">\r\n                          {{ filterType.value }}\r\n                        </a>\r\n                      }                    \r\n                    </div>\r\n                  }\r\n                }@else if(column.filterType === \"date\"){\r\n                  <input class=\"flexi-grid-filter-input\" type=\"date\" [(ngModel)]=\"column.value\" (input)=\"filter(column.field, column.filterOperator, column.value, column.filterType)\">\r\n                }@else if(column.filterType === \"date-time\"){\r\n                  <input class=\"flexi-grid-filter-input\" type=\"datetime-local\" [(ngModel)]=\"column.value\" (input)=\"filter(column.field, column.filterOperator, column.value, column.filterType)\">\r\n                }@else if(column.filterType === \"number\"){\r\n                  <input class=\"flexi-grid-filter-input\" type=\"number\" [(ngModel)]=\"column.value\" (input)=\"filter(column.field, column.filterOperator, column.value, column.filterType)\">\r\n                  @if(!column.value){\r\n                    <svg class=\"svg cursor show-filter\" (click)=\"toggleFilterDropdown(column.field)\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M3.9 54.9C10.5 40.9 24.5 32 40 32H472c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9V448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6V320.9L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z\"/></svg>\r\n                    <div class=\"flexi-grid-dropdown-menu\" [class.show]=\"filterDropdownVisible()[column.field]\">\r\n                      @for(filterType of numberFilterTypes(); track filterType.operator){\r\n                        <a class=\"flexi-grid-dropdown-item\" [ngClass]=\"column.filterOperator === filterType.operator ? 'flexi-grid-active' : ''\" (click)=\"applyFilter(column, filterType.operator)\">\r\n                          {{ filterType.value }}\r\n                        </a>\r\n                      }                    \r\n                    </div>\r\n                  }\r\n                }\r\n                \r\n                @if(showClearFilter(column.value)){\r\n                  <svg (click)=\"clearFilter(column.field)\" class=\"svg cursor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M3.9 22.9C10.5 8.9 24.5 0 40 0H472c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L396.4 195.6C316.2 212.1 256 283 256 368c0 27.4 6.3 53.4 17.5 76.5c-1.6-.8-3.2-1.8-4.7-2.9l-64-48c-8.1-6-12.8-15.5-12.8-25.6V288.9L9 65.3C-.7 53.4-2.8 36.8 3.9 22.9zM432 224a144 144 0 1 1 0 288 144 144 0 1 1 0-288zm59.3 107.3c6.2-6.2 6.2-16.4 0-22.6s-16.4-6.2-22.6 0L432 345.4l-36.7-36.7c-6.2-6.2-16.4-6.2-22.6 0s-6.2 16.4 0 22.6L409.4 368l-36.7 36.7c-6.2 6.2-6.2 16.4 0 22.6s16.4 6.2 22.6 0L432 390.6l36.7 36.7c6.2 6.2 16.4 6.2 22.6 0s6.2-16.4 0-22.6L454.6 368l36.7-36.7z\"/></svg>\r\n                }\r\n              </div>\r\n            </th>\r\n          }@else {\r\n            @if(!isShowMobileFilter()){\r\n              <th [hidden]=\"!column.visible\"></th>\r\n            }\r\n          }\r\n        }\r\n      </tr>\r\n    }    \r\n   </thead>\r\n   <tbody class=\"relative\" [ngStyle]=\"{'height': autoHeight ? '100%' : height}\" style=\"min-height: 100px;\" [ngStyle]=\"tbodyStyle\">\r\n     @if(loading){        \r\n       <div class=\"flexi-grid-spinner-container\">\r\n         <div class=\"flexi-grid-spinner-1\"></div>\r\n         <div class=\"flexi-grid-spinner-2\"></div>\r\n       </div>\r\n     }\r\n     @if(data.length > 0){      \r\n       @for(item of pagedData(); track $index; let i = $index){\r\n         <tr [ngStyle]=\"{'min-height': trMinHeight}\">\r\n           @if(showIndex){\r\n             @if(!pageable){\r\n               <td class=\"flexi-grid-index-td\" [ngStyle]=\"{'width': indexWidth}\" [attr.data-label]=\"'#'\">{{($index + 1)}}</td>\r\n             }\r\n             @else{\r\n               <td class=\"flexi-grid-index-td\" [ngStyle]=\"{'width': indexWidth}\" [attr.data-label]=\"'#'\">{{($index + ((state.pageNumber -1) * +state.pageSize)) + 1}}</td>\r\n             }\r\n           }\r\n           @for(column of columns; track $index){\r\n             @if(column.columnTemplate && column.visible){\r\n               <td [ngStyle]=\"{'width': column.width, 'text-align': column.textAlign}\" [ngClass]=\"column.className\" [attr.data-label]=\"column.title ? column.title : column.field\">\r\n                 <ng-container *ngTemplateOutlet=\"column.columnTemplate; context: {value: item[column.field], item: item, index: i}\"></ng-container>\r\n               </td>\r\n             }@else {\r\n               <td [ngStyle]=\"{'width': column.width, 'text-align': column.textAlign}\" [hidden]=\"!column.visible\" [ngClass]=\"column.className\" [ngClass]=\"column.hideOverflow ? 'text-overflow-hidden' : ''\" [attr.data-label]=\"column.title ? column.title : column.field\" [title]=\"item ? getFieldValue(item, column.field) : ''\">\r\n                 @if(column.field){\r\n                   @if((column.filterType === \"date\" || column.filterType === \"date-time\") && column.filterType){\r\n                     {{ getFieldValue(item, column.field) | date: column.format! }}\r\n                   }@else if(column.filterType === \"number\" && column.filterType){\r\n                     @if(column.format === \"n\" || column.format === null){\r\n                       {{ (getFieldValue(item, column.field) | trCurrency: \"\": true: column.fraction) }}\r\n                     }@else if(column.format === \"c\"){\r\n                       {{ (getFieldValue(item, column.field) | trCurrency : column.symbol: column.showSymbolInFront: column.fraction) }}\r\n                     }                    \r\n                   }\r\n                   @else {\r\n                     {{ getFieldValue(item, column.field) }}\r\n                   }\r\n                 }\r\n               </td>\r\n             }            \r\n           }\r\n         </tr>\r\n       }\r\n     }@else {\r\n       @if(!loading){\r\n         <tr style=\"height: 100%;\" [ngStyle]=\"{'min-height': trMinHeight}\">\r\n           <td style=\"text-align: center;\" [colSpan]=\"columns?.length\">\r\n             <h4>Gösterilecek veri bulunamadı!</h4>\r\n           </td>\r\n         </tr>\r\n       }\r\n     }\r\n   </tbody>\r\n   <tfoot>\r\n     <ng-container *ngTemplateOutlet=\"footerTemplate\" class=\"overflow-x\"></ng-container>     \r\n   </tfoot>\r\n </table>\r\n  @if(pageable){\r\n    <div class=\"flexi-grid-pagination-container\">\r\n      @if(!isShowMobileFilter()){\r\n        <div class=\"flexi-grid-pagination-part-one\">\r\n          <select class=\"flexi-grid-pagesize-select\" [ngModel]=\"state.pageSize\" (change)=\"changePageSize($event)\">\r\n            @for(size of pageSizeList; track size){\r\n            <option>{{size}}</option>\r\n            }\r\n          </select>\r\n        </div>\r\n        <div class=\"flexi-grid-pagination-part-two\">\r\n          <ul class=\"flexi-grid-pagination\">\r\n            @if(this.pageNumbers().length > 1){              \r\n              <li class=\"flexi-grid-page-item\" [ngClass]=\"state.pageNumber === 1 ? 'disabled': ''\" (click)=\"changePage(1)\">\r\n                <a class=\"flexi-grid-page-link\" aria-label=\"Previous\">\r\n                  <span aria-hidden=\"true\">&laquo;</span>\r\n                </a>\r\n              </li>\r\n              <li class=\"flexi-grid-page-item\" [ngClass]=\"state.pageNumber === 1 ? 'disabled': ''\"\r\n                (click)=\"changePage(state.pageNumber - 1)\">\r\n                <a class=\"flexi-grid-page-link\" aria-label=\"Previous\">\r\n                  <span aria-hidden=\"true\">&#8249;</span>\r\n                </a>\r\n              </li>\r\n              @if(pageNumbers()[0] !== 1){\r\n              <li class=\"flexi-grid-page-item\" (click)=\"previousPageGroup()\">\r\n                <a class=\"flexi-grid-page-link\">...</a>\r\n              </li>\r\n              }\r\n              @for(pageNumber of pageNumbers(); track pageNumber){\r\n              <li class=\"flexi-grid-page-item\" [ngClass]=\"state.pageNumber === pageNumber ? 'flexi-grid-active': ''\">\r\n                <a (click)=\"changePage(pageNumber)\" class=\"flexi-grid-page-link\">\r\n                  {{pageNumber}}\r\n                </a>\r\n              </li>\r\n              }\r\n              @if(pageNumbers()[pageNumbers().length - 1] !== totalPageCount()){\r\n              <li class=\"flexi-grid-page-item\" (click)=\"nextPageGroup()\">\r\n                <a class=\"flexi-grid-page-link\">...</a>\r\n              </li>\r\n              }\r\n              <li class=\"flexi-grid-page-item\" [ngClass]=\"state.pageNumber === totalPageCount() ? 'disabled': ''\"\r\n                (click)=\"changePage(state.pageNumber + 1)\">\r\n                <a class=\"flexi-grid-page-link\" aria-label=\"Next\">\r\n                  <span aria-hidden=\"true\">&#8250;</span>\r\n                </a>\r\n              </li>\r\n              <li class=\"flexi-grid-page-item\" [ngClass]=\"state.pageNumber === totalPageCount() ? 'disabled': ''\"\r\n                (click)=\"changePage(totalPageCount())\">\r\n                <a class=\"flexi-grid-page-link\" aria-label=\"Next\">\r\n                  <span aria-hidden=\"true\">&raquo;</span>\r\n                </a>\r\n              </li>\r\n            }\r\n          </ul>        \r\n        </div>\r\n      }\r\n      <div class=\"flexi-grid-pagination-part-third\">\r\n        <span> \r\n            {{state.pageNumber}} - {{totalPageCount()}} of {{(total | currency: '': '': '1.0')!.replace(',','.')}} items \r\n        </span>\r\n      </div>\r\n    </div>\r\n  }\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { StateFilterModel, StateModel } from \"./state.model\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class FlexiGridService {\r\n    getODataEndpoint(state: StateModel) {\r\n        let endpoint = `$top=${state.pageSize}&$skip=${state.skip}`;\r\n\r\n        if (state.sort.field !== '') {\r\n            endpoint += `&$orderby=${this.toTitleCase(state.sort.field)}`;\r\n            if (state.sort.dir === 'desc') {\r\n                endpoint += ` desc`;\r\n            }\r\n        }\r\n\r\n        if (state.filter.length > 0) {\r\n            const filters = state.filter.filter(p=> p.value);\r\n            \r\n            if(filters.length > 0) {\r\n                endpoint += `&$filter=`;\r\n                let filterValue: string = \"\";\r\n    \r\n                filters.forEach((val: StateFilterModel) => {\r\n    \r\n                    if (filterValue !== \"\") {\r\n                        filterValue = filterValue + \" and \";\r\n                    }\r\n    \r\n                    if (val.type === \"date\") {\r\n                        const date = new Date(val.value);\r\n                        const isoDate = date.toISOString().split('T')[0];\r\n                        filterValue += `${this.toTitleCase(val.field)} eq ${isoDate}`;\r\n                    }\r\n                    else if (val.type === \"date-time\") {\r\n                        const date = new Date(val.value);\r\n                        const isoDate = date.toISOString()\r\n                        filterValue += `${this.toTitleCase(val.field)} eq ${isoDate}`;\r\n                    }\r\n                    else if (val.type === \"number\") {\r\n                        if (val.operator === \"contains\") val.operator = \"eq\";\r\n                        filterValue += `${this.toTitleCase(val.field)} ${val.operator} ${val.value}`;\r\n                    }\r\n                    else if (val.type === \"text\") {\r\n                        switch (val.operator) {\r\n                            case \"contains\":\r\n                                filterValue += `contains(${this.toTitleCase(val.field)}, '${val.value}')`;\r\n                                break;\r\n                            case \"not contains\":\r\n                                filterValue += `not(contains(${this.toTitleCase(val.field)}, '${val.value}'))`;\r\n                                break;\r\n                            case \"startswith\":\r\n                                filterValue += `startswith(${this.toTitleCase(val.field)}, '${val.value}')`;\r\n                                break;\r\n                            case \"endswith\":\r\n                                filterValue += `endswith(${this.toTitleCase(val.field)}, '${val.value}')`;\r\n                                break;\r\n                            case \"eq\":\r\n                            case \"ne\":\r\n                                filterValue += `${this.toTitleCase(val.field)} ${val.operator} '${val.value}'`;\r\n                                break;\r\n                            default:\r\n                                filterValue += `${this.toTitleCase(val.field)} ${val.operator} '${val.value}'`;\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n                endpoint += filterValue;\r\n            }\r\n        }\r\n\r\n        return endpoint;\r\n    }\r\n\r\n    toTitleCase(str: string) {\r\n        return str\r\n            .split(' ') // Metni boşluklardan ayırarak kelimelere bölüyoruz.\r\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1)) // Her kelimenin ilk harfini büyük yapıyoruz.\r\n            .join(' '); // Kelimeleri tekrar birleştiriyoruz.\r\n    }\r\n\r\n    exportDataToExcel(data: any[], fileName: string) {\r\n        if (data.length === 0) {\r\n          console.error('No data to export');\r\n          return;\r\n        }\r\n      \r\n        // Sütun başlıklarını elde et\r\n        const headers = Object.keys(data[0]);\r\n      \r\n        // CSV string oluşturma\r\n        let csvData = headers.join(',') + '\\n';\r\n        data.forEach(row => {\r\n          let rowData = headers.map(header => {\r\n            const cellData = row[header] ? row[header].toString().replace(/\"/g, '\"\"') : '';\r\n            return `\"${cellData}\"`;\r\n          }).join(',');\r\n          csvData += rowData + '\\n';\r\n        });\r\n      \r\n        // CSV dosyasını indirme\r\n        const blob = new Blob([csvData], { type: 'text/csv' });\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.setAttribute('hidden', '');\r\n        a.setAttribute('href', url);\r\n        a.setAttribute('download', fileName + '.csv');\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n      }\r\n}","import { NgModule } from '@angular/core';\r\nimport { FlexiGridColumnComponent } from './flexi-grid-column.component';\r\nimport { FlexiGridComponent } from './flexi-grid.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TrCurrencyPipe } from 'tr-currency';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FlexiGridComponent,\r\n    FlexiGridColumnComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TrCurrencyPipe\r\n  ],\r\n  exports: [\r\n    FlexiGridComponent,\r\n    FlexiGridColumnComponent\r\n  ]\r\n})\r\nexport class FlexiGridModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}